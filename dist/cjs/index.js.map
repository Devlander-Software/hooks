{"version":3,"file":"index.js","sources":["../../src/hooks/useComponentSize/useComponentSize.tsx","../../src/hooks/useOnClickByStyle/useOnClickByStyle.tsx","../../src/hooks/useScreenDimensions/useScreenDimensions.tsx","../../src/hooks/useScrollControl/useScrollControl.tsx","../../src/hooks/useVisibilitySensor/useVisibilitySensor.tsx"],"sourcesContent":["import { Platform } from 'react-native';\n\n/**\n * Platform-specific hook to get the component's size and position.\n * \n * For web, it uses the `useComponentSize.web` implementation, and\n * for native platforms, it uses the `useComponentSize.native` implementation.\n *\n * @example\n * \n * // On web:\n * import React from 'react';\n * import {useComponentSize} from '@devlander/hooks';\n *\n * const MyComponent: React.FC = () => {\n *   const [ size, ref ] = useComponentSize();\n *\n *   useEffect(() => {\n *     console.log(size); // Logs the component's size and position\n *   }, [size]);\n *\n *   return <div ref={ref}>Your content here</div>;\n * };\n *\n * \n * @example\n *\n * // On native:\n * import React from 'react';\n * import {useComponentSize} from '@devlander/hooks';\n *\n * const MyComponent: React.FC = () => {\n *   const [ size, setSize ] = useComponentSize();\n *\n *   useEffect(() => {\n *     console.log(size); // Logs the component's size and position\n *   }, [size]);\n *\n *   return <View onLayout={ref}>Your content here</View>;\n * };\n */\nexport const useComponentSize = Platform.select({\n    web: () => require('./useComponentSize.web').default,\n    default: () => require('./useComponentSize.native').default\n})\n\nexport default useComponentSize;\n","import { Platform } from 'react-native'\n\nexport const useOnClickByStyle = Platform.select({\n    web: () => require('./useOnClickByStyle.web').default,\n    default: () => require('./useOnClickByStyle.native').default\n})\n\nexport default useOnClickByStyle","import { Platform } from 'react-native';\n\n\n/**\n * `useScreenDimensions` hook provides the dimensions of the screen for React Native development.\n * It's instrumental in monitoring the current screen size, aiding in real-time screen manipulations.\n * \n * In many scenarios, it's pivotal to have an understanding of the screen's dimensions for layout,\n * design responsiveness, and dynamically rendering or positioning components based on the available space.\n * \n * @example\n * ```typescript\n * const { width, height } = useScreenDimensions();\n * ```\n * \n * @returns {Object} An object containing the `width` and `height` of the screen.\n */\n\nexport const useScreenDimensions = Platform.select({\n    web: () => require('./useScreenDimensions.web').default,\n    default: () => require('./useScreenDimensions.native').default\n})\n\nexport default useScreenDimensions","import { Platform } from 'react-native'\n\nexport const useScrollControl = Platform.select({\n    web: () => require('./useScrollControl.web').default,\n    default: () => require('./useScrollControl.native').default\n})\n\nexport default useScrollControl","import { Platform, View } from 'react-native';\n\nexport interface UseVisibilitySensorOptions<T> {\n    (onChange: (visible: boolean) => void): React.RefObject<T>\n}\n\n\nexport type UseVisibilitySensorNative = UseVisibilitySensorOptions<View>\n\nexport type UseVisibilitySensorWeb = UseVisibilitySensorOptions<any>\n\ntype UseVisibilitySensorDefinition = UseVisibilitySensorNative | UseVisibilitySensorWeb\n\n\nexport const useVisibilitySensor = Platform.select({\n    web: () => require('./useVisibilitySensor.web').default as UseVisibilitySensorWeb ,\n    native: () => require('./useVisibilitySensor.native').default as UseVisibilitySensorNative\n\n})\n\nexport default useVisibilitySensor"],"names":["useComponentSize","Platform","select","web","require","default","useOnClickByStyle","useScreenDimensions","useScrollControl","useVisibilitySensor","native"],"mappings":"2CAyCa,MAAAA,EAAmBC,EAAQA,SAACC,OAAO,CAC5CC,IAAK,IAAMC,QAAQ,0BAA0BC,QAC7CA,QAAS,IAAMD,QAAQ,6BAA6BC,UCzC3CC,EAAoBL,EAAQA,SAACC,OAAO,CAC7CC,IAAK,IAAMC,QAAQ,2BAA2BC,QAC9CA,QAAS,IAAMD,QAAQ,8BAA8BC,UCc5CE,EAAsBN,EAAQA,SAACC,OAAO,CAC/CC,IAAK,IAAMC,QAAQ,6BAA6BC,QAChDA,QAAS,IAAMD,QAAQ,gCAAgCC,UClB9CG,EAAmBP,EAAQA,SAACC,OAAO,CAC5CC,IAAK,IAAMC,QAAQ,0BAA0BC,QAC7CA,QAAS,IAAMD,QAAQ,6BAA6BC,UCU3CI,EAAsBR,EAAQA,SAACC,OAAO,CAC/CC,IAAK,IAAMC,QAAQ,6BAA6BC,QAChDK,OAAQ,IAAMN,QAAQ,gCAAgCC"}