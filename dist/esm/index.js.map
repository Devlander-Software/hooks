{"version":3,"file":"index.js","sources":["../../src/hooks/useComponentSize/useComponentSize.tsx","../../src/hooks/useScreenDimensions/useScreenDimensions.tsx"],"sourcesContent":["import { Platform } from 'react-native';\n\n/**\n * Platform-specific hook to get the component's size and position.\n * \n * For web, it uses the `useComponentSize.web` implementation, and\n * for native platforms, it uses the `useComponentSize.native` implementation.\n *\n * @example\n * \n * // On web:\n * import React from 'react';\n * import {useComponentSize} from '@devlander/hooks';\n *\n * const MyComponent: React.FC = () => {\n *   const [ size, ref ] = useComponentSize();\n *\n *   useEffect(() => {\n *     console.log(size); // Logs the component's size and position\n *   }, [size]);\n *\n *   return <div ref={ref}>Your content here</div>;\n * };\n *\n * \n * @example\n *\n * // On native:\n * import React from 'react';\n * import {useComponentSize} from '@devlander/hooks';\n *\n * const MyComponent: React.FC = () => {\n *   const [ size, setSize ] = useComponentSize();\n *\n *   useEffect(() => {\n *     console.log(size); // Logs the component's size and position\n *   }, [size]);\n *\n *   return <View onLayout={ref}>Your content here</View>;\n * };\n */\nexport const useComponentSize = Platform.select({\n    web: () => require('./useComponentSize.web').default,\n    default: () => require('./useComponentSize.native').default\n})\n\nexport default useComponentSize;\n","import { Platform } from 'react-native';\n\nexport const useScreenDimensions = Platform.select({\n    web: () => require('./useScreenDimensions.web').default,\n    default: () => require('./useScreenDimensions.native').default\n})\n\nexport default useScreenDimensions"],"names":["useComponentSize","Platform","select","web","require","default","useScreenDimensions"],"mappings":"wCAyCa,MAAAA,EAAmBC,EAASC,OAAO,CAC5CC,IAAK,IAAMC,QAAQ,0BAA0BC,QAC7CA,QAAS,IAAMD,QAAQ,6BAA6BC,UCzC3CC,EAAsBL,EAASC,OAAO,CAC/CC,IAAK,IAAMC,QAAQ,6BAA6BC,QAChDA,QAAS,IAAMD,QAAQ,gCAAgCC"}